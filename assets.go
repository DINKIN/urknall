package urknall

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"log"
	"os"
	"path/filepath"
	"strings"
)

type assetFileSystemI interface {
	Open(name string) (assetFileI, error)
	AssetNames() []string
}

type assetFileI interface {
	io.Closer
	io.Reader
}

var assets assetFileSystemI

func assetNames() (names []string) {
	return assets.AssetNames()
}

func readAsset(key string) ([]byte, error) {
	r, e := assets.Open(key)
	if e != nil {
		return nil, e
	}
	defer r.Close()

	p, e := ioutil.ReadAll(r)
	if e != nil {
		return nil, e
	}
	return p, nil
}

func mustReadAsset(key string) []byte {
	p, e := readAsset(key)
	if e != nil {
		panic(e)
	}
	return p
}

type assetOsFS struct{ root string }

func (aFS assetOsFS) Open(name string) (assetFileI, error) {
	return os.Open(filepath.Join(aFS.root, name))
}

func (aFS *assetOsFS) AssetNames() ([]string) {
	names, e := filepath.Glob(aFS.root + "/*")
	if e != nil {
		log.Print(e)
	}
	return names
}

type assetIntFS map[string][]byte

type assetFile struct {
	decompressor io.ReadCloser
}

func (afs assetIntFS) AssetNames() (names []string) {
	names = make([]string, 0, len(afs))
	for k, _ := range afs {
		names = append(names, k)
	}
	return names
}

func (afs assetIntFS) Open(name string) (af assetFileI, e error) {
	if asset, found := afs[name]; found {
		decomp, e := gzip.NewReader(bytes.NewBuffer(asset))
		if e != nil {
			return nil, e
		}
		af = &assetFile{decompressor: decomp}
		return af, nil
	}
	return nil, os.ErrNotExist
}

func (a *assetFile) Close() error {
	if a.decompressor != nil {
		return a.decompressor.Close()
	}
	return nil
}

func (a *assetFile) Read(p []byte) (n int, e error) {
	if a.decompressor == nil {
		return 0, os.ErrInvalid
	}
	return a.decompressor.Read(p)
}

func init() {
	env_name := fmt.Sprintf("GOASSETS_%s_PATH", strings.ToUpper("urknall"))
	path := os.Getenv(env_name)
	if path != "" {
		if !filepath.IsAbs(path) {
			log.Fatalf("path %q given in %s must be absolute!", path, env_name)
		}
		if _, e := os.Stat(path); e != nil {
			log.Fatalf("path %q does not exist!", path)
		}
		assets = &assetOsFS{root: path}
		return
	}

	assetsTmp := assetIntFS{}
	assetsTmp["fw_ipset.conf"] = []byte{
		0x1f,0x8b,0x8,0x0,0x0,0x9,0x6e,0x88,0x0,0xff,0xaa,0xae,
0x56,0x28,0x4a,0xcc,0x4b,0x4f,0x55,0xd0,0xf3,0xc,0x8,0x4e,
0x2d,0x29,0x56,0xa8,0xad,0x5,0xa,0x41,0x38,0x41,0xa9,0xc5,
0x25,0xf9,0x45,0xa9,0x10,0xa1,0xd4,0xbc,0x14,0x20,0x83,0xb,
0x0,0x0,0x0,0xff,0xff,0x1,0x0,0x0,0xff,0xff,0x59,0x6f,
0x68,0xbd,0x30,0x0,0x0,0x0,

	}
	assetsTmp["fw_rules_ipv4.conf"] = []byte{
		0x1f,0x8b,0x8,0x0,0x0,0x9,0x6e,0x88,0x0,0xff,0xa4,0x54,
0x5d,0x6f,0xa2,0x40,0x14,0x7d,0xf7,0x57,0xdc,0xa4,0x2f,0xda,
0x14,0xe2,0xd7,0x76,0xbb,0xbe,0xb1,0x8a,0x2b,0x89,0x5,0x22,
0x74,0x7d,0xd8,0xec,0xc3,0x8,0x63,0x9d,0x15,0xe7,0xb2,0x30,
0xc4,0x98,0xc6,0xff,0xbe,0x33,0xa,0x54,0xdc,0x52,0x1b,0xfb,
0x4,0xc3,0xcc,0x3d,0xe7,0xcc,0xb9,0xe7,0x72,0xbb,0x64,0x91,
0xa0,0x49,0x63,0x60,0xd9,0xee,0x93,0xf,0xa3,0x99,0xe3,0xc2,
0xaf,0xf6,0xa0,0xfd,0xbb,0x31,0x18,0x3b,0xb3,0xb9,0x31,0x1b,
0x55,0xbe,0x39,0x4f,0xfe,0xd9,0xb1,0xc6,0xd,0x18,0x41,0x40,
0x63,0x1,0x84,0xef,0x20,0xa1,0x11,0x11,0x34,0x4,0x4c,0x80,
0xa6,0x82,0x2c,0x22,0x96,0xae,0xe4,0x32,0x40,0xce,0x69,0x20,
0x18,0xf2,0x54,0x6f,0x68,0x16,0x1c,0xc9,0x3a,0xa0,0x6d,0x40,
0x9e,0x12,0x14,0x34,0xed,0xf8,0x9c,0x99,0x53,0xc3,0x37,0x47,
0x77,0xa6,0xe7,0x1b,0xdf,0xa7,0x96,0x37,0x31,0x47,0xa0,0xfd,
0x1,0x63,0x38,0x34,0x5d,0x5f,0x55,0x16,0xa2,0xae,0xa9,0xcd,
0xc5,0xbf,0x51,0xfa,0xf2,0x2,0x6c,0x9,0x1c,0x5,0xe8,0x2e,
0x49,0x8,0x47,0x16,0xc2,0x7e,0x6f,0x9b,0xf3,0x3b,0xb9,0x43,
0xb9,0x5a,0xbc,0x8f,0xae,0x5c,0x88,0x22,0xdc,0x2,0x89,0x22,
0x10,0x9,0x59,0x2e,0x59,0x0,0xc8,0x41,0xac,0x28,0x44,0x88,
0xf1,0x82,0x4,0x6b,0x60,0x5c,0x3a,0xbd,0x24,0x1,0x95,0x1e,
0x18,0xb9,0x7,0x1a,0x93,0xfb,0xa7,0x32,0x8d,0x42,0xa6,0x86,
0xd5,0x9d,0xc6,0x51,0xa4,0x3e,0x67,0x62,0xf5,0xd3,0xb5,0xa5,
0xa4,0xf7,0x48,0xd5,0x89,0x1a,0x3e,0x91,0xf1,0x76,0x1d,0xe3,
0xd9,0x5e,0x79,0xfb,0x92,0xfd,0xc4,0x1e,0x49,0xef,0x64,0x62,
0x81,0x99,0x3c,0x31,0xb2,0x3d,0x75,0xcf,0x75,0x16,0xa7,0x55,
0x40,0x59,0xa6,0x5b,0x85,0xe,0x59,0x4,0x5a,0xc,0x59,0x18,
0xab,0x16,0x1c,0x1e,0x5a,0x18,0x63,0x22,0xe0,0x4b,0xaf,0x6a,
0x66,0x9,0xec,0x5a,0xf6,0xf,0x99,0xaa,0xbf,0x99,0x8c,0x53,
0x5,0x3a,0x6,0x16,0x6c,0xe2,0x9a,0x2a,0x9b,0x8a,0x2d,0x26,
0x6b,0xf0,0xd9,0x86,0x82,0x9b,0xa0,0xc0,0x0,0x23,0x68,0xda,
0xbe,0xdb,0x2a,0xc0,0xaa,0x58,0xa7,0x5a,0x3a,0xdd,0x9e,0xa,
0xc6,0xeb,0xfb,0xff,0x5d,0xc6,0xf2,0xde,0x93,0xa1,0x5b,0x20,
0x82,0x6,0x1e,0x4a,0xbe,0x15,0x4a,0xa9,0xd0,0x9c,0x32,0x8e,
0x21,0x6d,0x1,0xc9,0x4,0x6e,0x88,0x60,0x81,0xec,0xd2,0xe,
0x48,0x9a,0xb2,0xe7,0x63,0x8b,0xe2,0x84,0x6d,0x48,0xb2,0x3,
0xcb,0xad,0xd7,0x72,0xff,0x75,0x70,0xff,0x50,0xaa,0xc9,0x57,
0xe7,0xe9,0x95,0x39,0xad,0xf1,0x61,0xe2,0xfb,0xee,0xe5,0x7e,
0x88,0xe0,0xd0,0x8f,0xc3,0x23,0xe7,0x7d,0x68,0x5f,0xa2,0xb9,
0x6,0xb5,0xdf,0xef,0x5d,0x82,0x3d,0x49,0xdc,0xd,0x78,0xde,
0xa4,0x92,0xdc,0xf,0xd2,0x74,0xbb,0x17,0x3d,0x92,0x48,0x32,
0xc7,0xcf,0x14,0xf4,0x31,0x4b,0xe8,0x56,0xd,0xd0,0x7e,0xaf,
0xe0,0xc7,0x87,0xdf,0xe1,0x71,0x71,0x16,0xfd,0xca,0xe0,0x95,
0x16,0x3b,0x31,0xe5,0xea,0x6b,0x31,0x7f,0x4d,0x95,0x6,0x89,
0x19,0x82,0xc0,0xe2,0xbf,0xa7,0x5e,0xf3,0xa1,0x6c,0xe9,0x57,
0x39,0xd7,0xe9,0x7c,0xeb,0x7f,0xba,0x23,0x6f,0xcc,0xdd,0x47,
0x70,0x5f,0x9d,0x18,0x3a,0x8f,0x8f,0x96,0x74,0xef,0x96,0x13,
0x51,0x6f,0xa1,0x6d,0xf8,0x15,0xff,0xf2,0xaa,0x7f,0x0,0x0,
0x0,0xff,0xff,0x1,0x0,0x0,0xff,0xff,0xd3,0x36,0xd3,0x36,
0x6a,0x6,0x0,0x0,

	}
	assetsTmp["fw_rules_ipv6.conf"] = []byte{
		0x1f,0x8b,0x8,0x0,0x0,0x9,0x6e,0x88,0x0,0xff,0xd2,0x4a,
0xcb,0xcc,0x29,0x49,0x2d,0xe2,0xb2,0xf2,0xf4,0xb,0x8,0xd,
0x51,0x70,0x9,0xf2,0xf,0x50,0x88,0x36,0xb0,0x32,0x88,0xe5,
0xb2,0x72,0xf3,0xf,0xa,0x77,0xc,0x72,0x41,0x11,0xf3,0xf,
0xd,0x41,0x53,0xc6,0xe5,0xec,0xef,0xeb,0xeb,0x19,0xc2,0x5,
0x0,0x0,0x0,0xff,0xff,0x1,0x0,0x0,0xff,0xff,0xaa,0xef,
0x95,0xad,0x49,0x0,0x0,0x0,

	}
	assetsTmp["fw_upstart.sh"] = []byte{
		0x1f,0x8b,0x8,0x0,0x0,0x9,0x6e,0x88,0x0,0xff,0x8c,0xcb,
0xb1,0xa,0xc2,0x30,0x14,0x85,0xe1,0x39,0xf7,0x29,0x6e,0xab,
0x8b,0x43,0xcc,0x22,0x5d,0xea,0x22,0xa2,0xd0,0xa7,0x90,0x34,
0x1c,0x31,0x20,0xb1,0xe4,0xa6,0x2e,0xa5,0xef,0x6e,0x42,0x15,
0xc4,0xc9,0xe5,0xc,0x87,0xff,0x5b,0x55,0xa6,0xf7,0xc1,0xc8,
0x8d,0x4,0x89,0x35,0x88,0x9c,0x15,0x70,0xbd,0xee,0xce,0x87,
0xe3,0xa9,0x66,0x1f,0x48,0x4d,0x13,0x6f,0xbb,0x90,0x10,0xaf,
0xd6,0x81,0xe7,0x79,0x43,0x4a,0x99,0x51,0xa2,0x91,0x42,0xfd,
0x50,0x64,0x84,0xa4,0x47,0x4,0xeb,0x8a,0xf7,0x6c,0x90,0x5c,
0xfe,0x93,0xed,0xef,0x90,0x25,0x90,0x62,0xde,0xfd,0xf2,0xeb,
0xf,0xf9,0xed,0xe3,0x98,0xf7,0xe2,0x87,0xe7,0xee,0xcb,0x34,
0xff,0xa2,0x26,0xa3,0xb6,0x25,0x88,0x75,0x44,0x2f,0x0,0x0,
0x0,0xff,0xff,0x1,0x0,0x0,0xff,0xff,0xbf,0x86,0x2c,0xd6,
0xde,0x0,0x0,0x0,

	}
	
	assets = assetsTmp
}
